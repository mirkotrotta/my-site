# GENERAL CONFIGURATION

# Domain configuration
# The primary domain where your application will be hosted
DOMAIN=example.com

# Docker image configuration
# GitHub repository name in format username/repo
GITHUB_REPOSITORY=username/my-site

# Docker registry where images will be published
DOCKER_REGISTRY=ghcr.io

# Image tag for Docker images
TAG=latest

# DEPLOYMENT CONFIGURATION

# For local development, set to 'true' to disable HTTPS
# DISABLE_HTTPS=true

# Email address for ACME SSL certificate registration
ACME_EMAIL=admin@example.com

# Watchtower notifications (optional)
# NOTIFICATION_URL=telegram://token@telegram/?channels=channel-1

# FRONTEND CONFIGURATION

# Next.js environment mode
# Options: development, production, test
NODE_ENV=production

# API URL for frontend to call backend services
# Local development via Docker Compose: http://api:8000/api
# Production (via Traefik): https://example.com/api
NEXT_PUBLIC_API_URL=https://example.com/api

# Analytics configuration (optional)
# Umami analytics script URL
# NEXT_PUBLIC_UMAMI_SCRIPT_URL=https://analytics.example.com/script.js

# Umami website ID for analytics tracking
# NEXT_PUBLIC_UMAMI_WEBSITE_ID=your-umami-website-id

# Newsletter API key for Buttondown integration (optional)
# BUTTONDOWN_API_KEY=your-buttondown-api-key

# BACKEND CONFIGURATION

# GitHub personal access token
# Required for GitHub API integration in backend
# Create one at https://github.com/settings/tokens
GITHUB_TOKEN=your_github_token_here

# URL of the frontend for CORS and redirects
# Local development: http://frontend:4000
# Production: https://example.com
FRONTEND_URL=https://example.com

# Public URL of the frontend site
# Used for Open Graph metadata, canonical URLs, etc.
# Examples: https://example.com (production), http://localhost:3000 (development)
NEXT_PUBLIC_SITE_URL=https://example.com

# Port for the backend API to listen on
PORT=8000

# Set to 1 to prevent Python from buffering stdout/stderr
# Helps with container logging
PYTHONUNBUFFERED=1