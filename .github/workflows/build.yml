name: Build & Push

on:
  push:
    branches: [ main ]
  tags:
    - 'v*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [web, api]
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.service == 'web' && 'frontend' || 'backend' }}
          file: ${{ matrix.service == 'web' && 'frontend/Dockerfile' || 'backend/Dockerfile' }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/my-site-${{ matrix.service }}:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/my-site-${{ matrix.service }}:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/my-site-${{ matrix.service }}:cache,mode=max

      - name: Set up Node.js
        if: matrix.service == 'web'
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Set up Python
        if: matrix.service == 'api'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run tests
        run: |
          if [ "${{ matrix.service }}" == "web" ]; then
            cd frontend
            npm ci
            npm run lint
            npm run build --no-lint
          else
            cd backend
            pip install -r requirements.txt
            pytest
          fi
