services:
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: runner
    image: ghcr.io/mirkotrotta/my-site/my-site-web:${TAG:-latest}
    restart: unless-stopped
    expose:
      - 4000
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://${DOMAIN:-localhost}/api
    depends_on:
      - api
    labels:
      - traefik.enable=true
      - traefik.http.routers.web.rule=Host(`mirkotrotta.com`,`www.mirkotrotta.com`)
      - traefik.http.routers.web.entrypoints=websecure
      - traefik.http.routers.web.tls.certresolver=letsencrypt
      - traefik.http.services.web.loadbalancer.server.port=4000

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: runtime
    image: ghcr.io/mirkotrotta/my-site/my-site-api:${TAG:-latest}
    restart: unless-stopped
    expose:
      - 8000
    environment:
      - PYTHONUNBUFFERED=1
      - PORT=8000
      - FRONTEND_URL=https://${DOMAIN:-localhost}
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`mirkotrotta.com`) && PathPrefix(`/api`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls.certresolver=letsencrypt
      - traefik.http.services.api.loadbalancer.server.port=8000

  traefik:
    image: traefik:v2.10
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik/acme:/etc/traefik/acme
    command:
      # Core
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      # Entry-points
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"

      # ACME / Let's Encrypt (production)
      - "--certificatesresolvers.letsencrypt.acme.email=mirkotrottac@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"

    labels:
      - "traefik.enable=true"

      # Global security headers middleware
      - "traefik.http.middlewares.security-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.security-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.security-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.security-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.security-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.security-headers.headers.customFrameOptionsValue=SAMEORIGIN"
      - "traefik.http.middlewares.security-headers.headers.contentSecurityPolicy=default-src 'self'; img-src 'self' data: https:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; connect-src 'self' https:;"
      - "traefik.http.middlewares.security-headers.headers.referrerPolicy=strict-origin-when-cross-origin"
      - "traefik.http.middlewares.security-headers.headers.permissionsPolicy=camera=(), microphone=(), geolocation=(), payment=()"

  watchtower:
    image: containrrr/watchtower:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 86400 --cleanup
    environment:
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=${NOTIFICATION_URL:-}

networks:
  default:
    name: app-network
    driver: bridge 
