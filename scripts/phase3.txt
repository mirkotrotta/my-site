<context>
# Phase 3 Goal  
Prepare the code‑complete, multilingual site for production by containerising it, adding CI/CD, hardening the repo, and deploying to an Oracle Cloud VM behind Traefik with HTTPS. The work starts **after Task 005 (localisation)** and ends when the site is live, monitored, and documented.

# Key Personas  
- Mirko (developer / DevOps)  
- Recruiters & clients (DE / EN)  
- Automated CI bots (GitHub Actions)

# Success Criteria  
- `docker compose up` works locally and on VM.  
- GH Actions builds & pushes images, then deploys automatically.  
- Site serves HTTPS (Traefik, Let’s Encrypt).  
- Health endpoints, rate‑limits, and log rotation in place.  
- README has diagram and CI badges.  
- Lighthouse score ≥ 90.  

</context>

<PRD>
# Phase 3 ‑ Production Launch & CI/CD

## 006 – Docker Support (frontend & backend)
**Description**  Create multi‑stage Dockerfiles:  
- `frontend/Dockerfile` (Next 15, runs on **4000**)  
- `backend/Dockerfile` (FastAPI + `uvicorn --workers 2`, port **8000**)  
Add unified `.dockerignore`.  
**Priority** high **Effort** 45 min **Depends‑on** 005

---

## 007 – Docker Compose & Security Headers
Write `compose.yaml` with services: `web`, `api`, `traefik`, `watchtower`.  
Add Traefik labels for global security‑headers middleware (CSP, HSTS).  
**Priority** high **Effort** 30 min **Depends‑on** 006

---

## 008 – Local Smoke Test
Run `docker compose up --build`; verify:  
- `http://localhost` (Next)  
- `http://localhost/docs` (Swagger)  
Document issues.  
**Priority** high **Effort** 10 min **Depends‑on** 007

---

## 009 – Environment‑Variable Vaulting
Commit fully documented `.env.example` (+ optional `.env.production`).  
**Priority** medium **Effort** 5 min **Depends‑on** 008

---

## 010 – GitHub Actions • Build Pipeline
Create `build.yml`: Buildx matrix (`web`,`api`), layer cache, tests, push to GHCR. Add badge to README.  
**Priority** high **Effort** 20 min **Depends‑on** 009

---

## 011 – GitHub Actions • Deploy Pipeline
`deploy.yml`: SSH to VM (`SSH_PRIVATE_KEY`, `SERVER_IP`) → `git pull && docker compose pull && docker compose up -d`.  
Trigger on `main` + manual dispatch.  
**Priority** high **Effort** 15 min **Depends‑on** 010

---

## 012 – VM Bootstrap
Provision Oracle A1 VM, install Docker & Compose, harden SSH/UFW, clone repo, run compose.  
**Priority** high **Effort** 40 min **Depends‑on** 011

---

## 013 – DNS & TLS
Create DNS A/CNAME records; verify Traefik auto‑TLS (green lock).  
**Priority** high **Effort** 15 min **Depends‑on** 012

---

## 014 – Health‑Check & Rate‑Limit
Add `/health` endpoints (FastAPI & Next). Integrate `slowapi` with global 20 req/min limit.  
Optional Traefik LB health‑check label.  
**Priority** medium **Effort** 20 min **Depends‑on** 013

---

## 015 – GitHub Secrets
Add secrets table: `SSH_PRIVATE_KEY`, `SERVER_IP`, `GITHUB_TOKEN`, `NEXT_PUBLIC_SITE_URL`, `NEXT_PUBLIC_API_URL`, analytics IDs.  
**Priority** high **Effort** 10 min **Depends‑on** 014

---

## 016 – Docker Log Rotation
Configure `/etc/docker/daemon.json` with `max-size 10m`, `max-file 3`; restart Docker.  
**Priority** medium **Effort** 10 min **Depends‑on** 015

---

## 017 – Sitemap, Robots & SEO Tags
Install `next-sitemap`; generate `sitemap.xml`, `robots.txt`. Add canonical + OG/Twitter tags per locale.  
**Priority** medium **Effort** 30 min **Depends‑on** 015

---

## 018 – Analytics Integration
Integrate Umami/Plausible via env‑based script; verify dashboard events.  
**Priority** medium **Effort** 15 min **Depends‑on** 015

---

## 019 – Lighthouse Performance Gate
Add Lighthouse‑CI GitHub Action; fail build if performance < 90.  
**Priority** medium **Effort** 20 min **Depends‑on** 017 + 018

---

## 020 – Backup (optional)
Add `restic` sidecar / cron backing up volumes to S3 or Storage Box daily.  
**Priority** low **Effort** 30 min **Depends‑on** 012

---

## 021 – Docs & Diagram
Update `README.md` with architecture PNG, CI badges, quick‑start, restore notes.  
**Priority** medium **Effort** 25 min **Depends‑on** 019

---

## 022 – Future Metacubo Hook
Add `studio-frontend/` stub + Compose service, Traefik router `studio.mysite.com` (port 4001).  
**Priority** low **Effort** 15 min **Depends‑on** 013
</PRD>
