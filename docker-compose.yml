services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: runtime
    ports:
      - "8000:8000"
    environment:
      - FRONTEND_URL=http://frontend:4000
      - PYTHONUNBUFFERED=1
      - PORT=8000
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/env
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: runner
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://api:8000
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ./frontend/public:/app/public
      - ./frontend/.next/static:/app/.next/static
    restart: unless-stopped

networks:
  default:
    driver: bridge 